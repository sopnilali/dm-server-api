// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  avaterUrl String?
  password  String
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  blog      Blog[]
  @@map("users")
}

model Blog {
  id        String   @id @default(uuid())
  title     String
  content   String
  thumbnail String?
  category  String[]
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Service {
  id          String   @id @default(uuid())
  title       String
  description String?
  photo       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("services")
}

model WorkExperience {
  id          String    @id @default(uuid())
  designation String
  company     String
  startDate   DateTime
  endDate     DateTime?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("work_experiences")
}

model Portfolio {
  id          String   @id @default(uuid())
  title       String
  description String?
  photo       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("portfolios")
}

model Skill {
  id         String   @id @default(uuid())
  name       String
  icon       String?
  percentage Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("skills")
}

model ClientSays {
  id          String   @id @default(uuid())
  name        String
  photo       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("client_says")
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
}
